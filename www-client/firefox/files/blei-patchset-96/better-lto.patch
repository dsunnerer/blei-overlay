--- a/build/moz.configure/lto-pgo.configure	2021-12-12 01:22:42.727994363 +0100
+++ b/build/moz.configure/lto-pgo.configure	2021-12-12 01:28:11.835970894 +0100
@@ -303,15 +303,15 @@
         ldflags.append("-flto=%s" % num_cores)
         ldflags.append("-flifetime-dse=1")
 
-    # Tell LTO not to inline functions above a certain size, to mitigate
-    # binary size growth while still getting good performance.
-    # (For hot functions, PGO will put a multiplier on this limit.)
-    if target.os == "WINNT":
-        ldflags.append("-mllvm:-import-instr-limit=10")
-    elif target.os == "OSX":
-        ldflags.append("-Wl,-mllvm,-import-instr-limit=10")
-    elif c_compiler.type == "clang":
-        ldflags.append("-Wl,-plugin-opt=-import-instr-limit=10")
+    ## Tell LTO not to inline functions above a certain size, to mitigate
+    ## binary size growth while still getting good performance.
+    ## (For hot functions, PGO will put a multiplier on this limit.)
+    #if target.os == "WINNT":
+    #    ldflags.append("-mllvm:-import-instr-limit=10")
+    #elif target.os == "OSX":
+    #    ldflags.append("-Wl,-mllvm,-import-instr-limit=10")
+    #elif c_compiler.type == "clang":
+    #    ldflags.append("-Wl,-plugin-opt=-import-instr-limit=10")
 
     # If we're using the new pass manager, we can also enable the new PM
     # during LTO. Further we can use the resulting size savings to increase
@@ -322,10 +322,10 @@
             # is applied as a patch to our automation toolchain.
             if automation or c_compiler.version >= "12.0.0":
                 ldflags.append("-opt:ltonewpassmanager")
-                ldflags.append("-mllvm:-import-hot-multiplier=30")
+                #ldflags.append("-mllvm:-import-hot-multiplier=30")
         elif select_linker.KIND != "ld64" and c_compiler.type == "clang":
             ldflags.append("-Wl,-plugin-opt=new-pass-manager")
-            ldflags.append("-Wl,-plugin-opt=-import-hot-multiplier=30")
+            #ldflags.append("-Wl,-plugin-opt=-import-hot-multiplier=30")
 
     return namespace(
         enabled=True,
